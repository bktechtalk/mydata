---
- name: Start "{{ application_name }}" playbook project deployment
  hosts: all
  #vars_files:
  #  - "mydataUserInput.yaml"
  #vars:
  #  - appname: "{{ application_name }}"
  #  - appNameSpace: "{{ namespace_name }}"
  #  - imagetag: "{{ imageTagName }}"
  #  - version: "{{ version }}"

  tasks:
    - name: Build "{{ application_name }}" image and push to private image repository
      shell: |
        docker build -t baruniitt06/dockerimage-{{ application_name }}:{{ imageTagName }} /home/jenkins/workspace/DevOps_Infrastructure/mydata
        docker push baruniitt06/dockerimage-{{ application_name }}:{{ imageTagName }}
 
    - name: Create NameSpace for "{{ application_name }}"
      command: kubectl apply -f {{ application_name }}-namespace.yaml
      args:
        chdir: "{{ repo_path }}/{{ application_name }}"


    - name: Deploy "{{ application_name }}" service under the "{{ namespace_name }}"
      command: "{{ item }}"
      loop:
        - "kubectl apply -f {{ application_name }}-web-configmaps.yml"
        - "kubectl apply -f {{ application_name }}-web-deployment.yml"
        - "kubectl apply -f {{ application_name }}-web-services.yml"
        - "kubectl apply -f {{ application_name }}-web-ingress.yml"
      args:
        chdir: "{{ repo_path }}/{{ application_name }}"

    - name: Gather "{{ application_name }}" details and send email to "{{ application_name }}" app onwer
      command: "{{ item }}"
      with_items:
        - kubectl -n {{ appNameSpace }} get statefulsets
        - kubectl -n {{ appNameSpace }} get replicaset
        - kubectl -n {{ appNameSpace }} get pods
        - kubectl -n {{ appNameSpace }} get services
